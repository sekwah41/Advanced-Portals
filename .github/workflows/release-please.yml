on:
  workflow_dispatch:
  push:
    branches:
    - main
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    environment: release
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    # https://github.com/google-github-actions/release-please-action in case more config is needed
    steps:
    - uses: google-github-actions/release-please-action@v3
      id: release
      with:
        command: manifest
        token: ${{ secrets.PAT }}
          # See how to configure file https://github.com/googleapis/release-please/blob/main/docs/manifest-releaser.md
      # See output info at https://github.com/google-github-actions/release-please-action#configuration for variables

  # Possibly optimise this by building and then passing the folder across to these stages
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Java 8 for legacyspigot
          - project: legacyspigot
            java-version: 8
            release-task: curseforge
          - project: legacyspigot
            java-version: 8
            release-task: discordupload
          - project: legacyspigot
            java-version: 8
            release-task: modrinth
          # Java 16 for spigot
          - project: spigot
            java-version: 16
            release-task: curseforge
          - project: spigot
            java-version: 16
            release-task: discordupload
          - project: spigot
            java-version: 16
            release-task: modrinth
    needs: release-please
    runs-on: ubuntu-latest
    environment: release
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
    - uses: actions/checkout@v3
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java-version }}
    - name: Build and publish (release)
      env:
        CURSE_API: ${{ secrets.CURSE_API }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_RELEASE_WEBHOOK: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
        MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        IS_RELEASE: true
      run: |
        # Build
        ./gradlew build ${{ matrix.project }}:${{ matrix.release-task }}
