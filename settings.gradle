
pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://maven.neoforged.net/releases' }
        maven {
            name = 'MinecraftForge'
            url = 'https://maven.minecraftforge.net/'
        }
        maven {
            url = "https://maven.msrandom.net/repository/cloche"
        }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.9.0'
}

rootProject.name = "Advanced-Portals"

// Core modules
include 'core'
include 'proxycore'
include 'lang'

// Proxies
include 'velocity'
include 'bungee'

def loadTargetModulesFromEnvFile() {
    def envFile = file('.env')
    if (!envFile.exists()) return null

    def lines = envFile.readLines().findAll { line ->
        def trimmed = line.trim()
        return trimmed && !trimmed.startsWith('#')
    }
    // Join non-empty lines with commas
    return lines.join(',')
}

def targetModules = System.getenv("TARGET_MODULE") ?: loadTargetModulesFromEnvFile()

if (targetModules == null || targetModules.trim().isEmpty()) {
    // If none are specified just default to spigot for local dev.
    println "No modules specified, defaulting to spigot only"
    include('spigot')
} else {
    // Include only the specified optional module
    targetModules.split(',').collect { it.trim() }.each { moduleName ->
        println "Including optional module: $moduleName"
        include(moduleName)
    }
}

