
plugins {
    id 'com.gradleup.shadow' version '8.3.5'
    id 'maven-publish'
    id 'idea'
    id 'eclipse'
}

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    shade
    shadow {
        canBeConsumed = true
        canBeResolved = true
    }
}

// includeLibs just says to include the library in the final jar
dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    //shade group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'com.google.inject', name: 'guice', version: '7.0.0'
    //shade group: 'com.google.inject', name: 'guice', version: '7.0.0'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    //shade group: 'org.yaml', name: 'snakeyaml', version: '2.2'
    implementation group: 'com.google.guava', name: 'guava', version: '[33.2.0-jre,)'
    //shade group: 'com.google.guava', name: 'guava', version: '[33.2.0-jre,)'
    implementation 'com.github.spotbugs:spotbugs-annotations:4.9.3'
}

project.afterEvaluate {
    tasks.named('shadowJar') {
        configurations = [project.configurations.shade]

        exclude 'io/netty/**'

        minimize()

        archiveClassifier.set('')
    }

    assemble.dependsOn shadowJar
}


tasks.named('build') {
    dependsOn tasks.named('shadowJar')
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')

def generateTemplates = tasks.register('generateTemplates', Copy) {
    def props = ['version': project.version]
    inputs.properties props

    from templateSource
    into templateDest
    expand props
}

tasks.named('compileJava') {
    dependsOn(generateTemplates)
    doFirst {
        source(generateTemplates.get().outputs.files)
    }
}

artifacts {
    shadow shadowJar
    archives shadowJar
}

tasks.named('jar') {
    enabled = false
}
